package IM.Message;
import "IM.BaseDefine.proto";
option java_package = "com.dffx.im.protobuf";
//option java_outer_classname = "MOGUJIEIMMessage";
option optimize_for = LITE_RUNTIME;

//service id  0x0003
message IMMsgData{
	//cmd id:		0x0301
	required uint32 from_user_id = 1;				//消息发送方
	required uint32 to_session_id = 2;				//消息接受方
	required uint32 msg_id = 3;
	required uint32 create_time = 4; 
	required IM.BaseDefine.MsgType msg_type = 5;
	required bytes msg_data = 6;
	
	optional uint32 is_black = 10; //服务端使用：0=正常，1=黑名单屏蔽
	optional bytes attach_data = 20;
}

message IMMsgDataAck{
	//cmd id:		0x0302
	required uint32 user_id = 1;			//发送此信令的用户id
	required uint32 session_id = 2;				
	required uint32 msg_id = 3;
	required IM.BaseDefine.SessionType session_type = 4;
	
	optional uint32 is_black = 10; //服务端使用：0=正常，1=黑名单屏蔽
}

//删除之，使用IMMsgDataAck
//message IMMsgDataReadAck{
	//cmd id:		0x0303
	//required uint32 user_id = 1;			//发送此信令的用户id
	//required uint32 session_id = 2;			
	//required uint32 msg_id = 3;
	//required IM.BaseDefine.SessionType session_type = 4;
//}

//删除之，使用IMMsgDataAck
//message IMMsgDataReadNotify{
	//cmd id:		0x0304
	//required uint32 user_id = 1;			//发送此信令的用户id
	//required uint32 session_id = 2;		
	//required uint32 msg_id = 3;
	//required IM.BaseDefine.SessionType session_type = 4;
//}

message IMClientTimeReq{
	//cmd id:		0x0305
}

message IMClientTimeRsp{
	//cmd id:		0x0306
	required uint32 server_time = 1;
}

message IMUnreadMsgCntReq{
	//cmd id:		0x0307
	required uint32 user_id = 1;
	optional bytes attach_data = 20;	
}

message IMUnreadMsgCntRsp{
	//cmd id:		0x0308
	required uint32 user_id = 1;
	required uint32 total_cnt = 2;
	repeated IM.BaseDefine.UnreadInfo unreadinfo_list = 3;
	optional bytes attach_data = 20;
}

message IMGetMsgListReq{
	//cmd id:		0x0309
	required uint32 user_id = 1;
	required IM.BaseDefine.SessionType session_type = 2;
	required uint32 session_id = 3;
	required uint32 msg_id_begin = 4;
	required uint32 msg_cnt = 5;
	optional bytes attach_data = 20;
}

//对于群而言，如果消息数目返回的数值小于请求的cnt,则表示群的消息能拉取的到头了，更早的消息没有权限拉取。
//如果msg_cnt 和 msg_id_begin计算得到的最早消息id与实际返回的最早消息id不一致，说明服务器消息有缺失，需要
//客户端做一个缺失标记，避免下次再次拉取。
message IMGetMsgListRsp{
	//cmd id:		0x030a
	required uint32 user_id = 1;
	required IM.BaseDefine.SessionType session_type = 2;
	required uint32 session_id = 3;
	required uint32 msg_id_begin = 4;
	repeated IM.BaseDefine.MsgInfo msg_list = 5;
	optional bytes attach_data = 20;
}

//delete not used
//message IMGetLatestMsgIdReq{
	//cmd id: 		0x030b
	//required uint32 user_id = 1;
	//required IM.BaseDefine.SessionType session_type = 2;
	//required uint32 session_id = 3;
	//optional bytes attach_data = 20;
//}

//message IMGetLatestMsgIdRsp{
	//cmd id:		0x030c
	//required uint32 user_id = 1;
	//required IM.BaseDefine.SessionType session_type = 2;
	//required uint32 session_id = 3;
	//required uint32 latest_msg_id = 4;
	//optional bytes attach_data = 20;
//}

//delete not used
//message IMGetMsgByIdReq{
	//cmd id: 		0x030d
	//required uint32 user_id = 1;
	//required IM.BaseDefine.SessionType session_type = 2;
	//required uint32 session_id = 3; 
	//repeated uint32 msg_id_list = 4;
	//optional bytes attach_data = 20;
//}

//message IMGetMsgByIdRsp{
	//cmd id:		0x030e
	//required uint32 user_id = 1;
	//required IM.BaseDefine.SessionType session_type = 2;
	//required uint32 session_id = 3;
	//repeated IM.BaseDefine.MsgInfo msg_list = 4;
	//optional bytes attach_data = 20;
//}

// 清空聊天记录请求
message IMCleanMsgListReq{
	//cmd id: 		0x030f
	required uint32 user_id = 1;	//用户自己的id
	required IM.BaseDefine.SessionType session_type = 2;	//会话类型
	required uint32 session_id = 3;	//会话id，单聊为对方的user_id,群聊为群组id
	
	optional bytes attach_data = 20;
}

// 清空聊天记录应答
message IMCleanMsgListRsp{
	//cmd id:		0x0310
	required uint32 user_id = 1;	//用户自己的id
	required IM.BaseDefine.SessionType session_type = 2;	//会话类型
	required uint32 session_id = 3;	//会话id，单聊为对方的user_id,群聊为群组id
	optional uint32 result_code = 4;	//操作结果，0=success,1=failed
	
	optional bytes attach_data = 20;
}


message IMOrderStatusRead{
	required uint32 user_id = 1;	//用户自己的id
	required uint32 order_id = 2;	//已读的订单id
	required uint32 orderlist_is_null = 3; //订单列表是否为空
	
	optional bytes attach_data = 20;
};

